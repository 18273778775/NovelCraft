version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: novel-craft-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - novel-craft-network

  # Database with backup
  database:
    image: postgres:15-alpine
    container_name: novel-craft-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: novel_craft
      POSTGRES_USER: novel_craft_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/backups
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - novel-craft-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U novel_craft_user -d novel_craft"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: novel-craft-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://novel_craft_user:${DB_PASSWORD}@database:5432/novel_craft?schema=public
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 7d
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      DEEPSEEK_API_URL: https://api.deepseek.com
      DEEPSEEK_MODEL: deepseek-chat
      DOUBAO_API_KEY: ${DOUBAO_API_KEY:-}
      DOUBAO_API_URL: https://ark.cn-beijing.volces.com/api/v3
      DOUBAO_MODEL_ID: ${DOUBAO_MODEL_ID:-}
      CORS_ORIGIN: ${CORS_ORIGIN}
      MAX_FILE_SIZE: 10485760
      UPLOAD_DEST: ./uploads
      THROTTLE_TTL: 60000
      THROTTLE_LIMIT: 100
    depends_on:
      database:
        condition: service_healthy
    networks:
      - novel-craft-network
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_APP_NAME: "Novel Craft"
        VITE_APP_VERSION: "1.0.0"
    container_name: novel-craft-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - novel-craft-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: novel-craft-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - novel-craft-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  postgres_backups:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  novel-craft-network:
    driver: bridge
